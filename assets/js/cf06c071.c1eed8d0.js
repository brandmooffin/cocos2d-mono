"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2983],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||g[d]||o;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const o={sidebar_position:2},l="Part 1: Project Setup and Assets",i={unversionedId:"tutorials/platformer-tutorial/part-1-setup",id:"tutorials/platformer-tutorial/part-1-setup",title:"Part 1: Project Setup and Assets",description:"In this first part of the platformer tutorial, we'll set up our cocos2d-mono project and prepare the assets we'll need for our game.",source:"@site/docs/tutorials/platformer-tutorial/part-1-setup.md",sourceDirName:"tutorials/platformer-tutorial",slug:"/tutorials/platformer-tutorial/part-1-setup",permalink:"/docs/tutorials/platformer-tutorial/part-1-setup",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Building a 2D Platformer - Overview",permalink:"/docs/tutorials/platformer-tutorial/overview"},next:{title:"Part 2: Physics Foundation",permalink:"/docs/tutorials/platformer-tutorial/part-2-physics"}},s={},p=[{value:"What We&#39;ll Accomplish",id:"what-well-accomplish",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create a New DesktopGL Project",id:"step-1-create-a-new-desktopgl-project",level:2},{value:"Step 2: Understanding Project Structure",id:"step-2-understanding-project-structure",level:2},{value:"Step 3: Preparing Game Assets",id:"step-3-preparing-game-assets",level:2},{value:"Step 4: Setting Up Content Pipeline",id:"step-4-setting-up-content-pipeline",level:2},{value:"Adding Content to Your Project",id:"adding-content-to-your-project",level:3},{value:"Step 5: Creating a Basic Game Scene",id:"step-5-creating-a-basic-game-scene",level:2},{value:"Step 6: Update the Main Game Class",id:"step-6-update-the-main-game-class",level:2},{value:"Step 7: Build and Test",id:"step-7-build-and-test",level:2},{value:"Checkpoint: What Your Project Should Look Like",id:"checkpoint-what-your-project-should-look-like",level:2},{value:"Project Structure:",id:"project-structure",level:3},{value:"What You Should See:",id:"what-you-should-see",level:3},{value:"Key Concepts Learned:",id:"key-concepts-learned",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Download Checkpoint Project",id:"download-checkpoint-project",level:2}],c={toc:p},u="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"part-1-project-setup-and-assets"},"Part 1: Project Setup and Assets"),(0,r.yg)("p",null,"In this first part of the platformer tutorial, we'll set up our cocos2d-mono project and prepare the assets we'll need for our game."),(0,r.yg)("h2",{id:"what-well-accomplish"},"What We'll Accomplish"),(0,r.yg)("p",null,"By the end of this part, you'll have:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A working cocos2d-mono DesktopGL project"),(0,r.yg)("li",{parentName:"ul"},"Game assets properly configured"),(0,r.yg)("li",{parentName:"ul"},"A basic scene displaying a background"),(0,r.yg)("li",{parentName:"ul"},"Understanding of the project structure")),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("p",null,"Before you begin, make sure you have:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Visual Studio 2019 or newer installed"),(0,r.yg)("li",{parentName:"ul"},".NET Core SDK installed"),(0,r.yg)("li",{parentName:"ul"},"Basic C# knowledge"),(0,r.yg)("li",{parentName:"ul"},"cocos2d-mono installed (see ",(0,r.yg)("a",{parentName:"li",href:"/docs/getting-started/environment-setup"},"Environment Setup"),")")),(0,r.yg)("h2",{id:"step-1-create-a-new-desktopgl-project"},"Step 1: Create a New DesktopGL Project"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},'Open Visual Studio and select "Create a new project"'),(0,r.yg)("li",{parentName:"ol"},'Search for "cocos2d-mono" and select the "Cocos2D-Mono for DesktopGL (OpenGL Desktop Platforms)" template'),(0,r.yg)("li",{parentName:"ol"},'Name your project "Platformer" and click "Create"')),(0,r.yg)("p",null,"If you don't have the template installed, you can:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Install the ",(0,r.yg)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=Cocos2D-MonoTeamBrokenWallsStudios.cocos2dmonoprojecttemplates"},"Visual Studio Extension")),(0,r.yg)("li",{parentName:"ul"},"Install the dotnet templates by running: ",(0,r.yg)("inlineCode",{parentName:"li"},"dotnet new install Cocos2DMono.Samples")," and then create a new project with ",(0,r.yg)("inlineCode",{parentName:"li"},"dotnet new c2mdesktopgl -n Platformer")),(0,r.yg)("li",{parentName:"ul"},"Or create a new MonoGame DesktopGL project and add cocos2d-mono.DesktopGL through NuGet packages")),(0,r.yg)("h2",{id:"step-2-understanding-project-structure"},"Step 2: Understanding Project Structure"),(0,r.yg)("p",null,"Once created, your project will have the following structure:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Platformer/\n\u251c\u2500\u2500 Content/           - Game assets like images and sounds\n\u251c\u2500\u2500 AppDelegate.cs     - cocos2d-mono initialization and configuration\n\u251c\u2500\u2500 Game1.cs           - Main entry point and game loop\n\u251c\u2500\u2500 IntroLayer.cs      - Default template layer (you'll delete this)\n\u251c\u2500\u2500 Program.cs         - Program initialization\n\u2514\u2500\u2500 app.manifest       - Application manifest file\n")),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Note:")," The template includes ",(0,r.yg)("inlineCode",{parentName:"p"},"IntroLayer.cs"),", but we'll be replacing it with our own ",(0,r.yg)("inlineCode",{parentName:"p"},"GameLayer.cs")," in this tutorial. You can delete ",(0,r.yg)("inlineCode",{parentName:"p"},"IntroLayer.cs")," once you've created the ",(0,r.yg)("inlineCode",{parentName:"p"},"GameLayer.cs")," file.")),(0,r.yg)("p",null,"For our platformer, we'll eventually add several classes to organize our code:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"GameLayer.cs")," - Main game logic"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"Player.cs")," - Player character implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"Platform.cs")," - Platform objects"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"Collectible.cs")," - Coin object"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"PhysicsHelper.cs")," - Helper class for Box2D physics")),(0,r.yg)("h2",{id:"step-3-preparing-game-assets"},"Step 3: Preparing Game Assets"),(0,r.yg)("p",null,"For this tutorial, you'll need a few basic assets:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Player character (sprite sheet or individual images)"),(0,r.yg)("li",{parentName:"ol"},"Platform tiles"),(0,r.yg)("li",{parentName:"ol"},"Background image"),(0,r.yg)("li",{parentName:"ol"},"Optional collectibles and obstacles")),(0,r.yg)("p",null,"You can create these yourself or use free assets from sites like:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://opengameart.org/"},"OpenGameArt")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://kenney.nl/assets"},"Kenney Assets")," (recommended for beginners)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://itch.io/game-assets/free"},"itch.io"))),(0,r.yg)("p",null,"For this tutorial, we recommend downloading these sample assets:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A simple character sprite (64x64px)"),(0,r.yg)("li",{parentName:"ul"},"Platform tiles (32x32px)"),(0,r.yg)("li",{parentName:"ul"},"Background image (800x600px)")),(0,r.yg)("h2",{id:"step-4-setting-up-content-pipeline"},"Step 4: Setting Up Content Pipeline"),(0,r.yg)("p",null,"In order to add content to your project, not only should the assets exist within the ",(0,r.yg)("inlineCode",{parentName:"p"},"Content")," folder but they must be registered in the ",(0,r.yg)("inlineCode",{parentName:"p"},"Content.mgcb")," file."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://docs.monogame.net/articles/getting_started/tools/mgcb_editor.html"},"MGCB Editor")," is the easiest way to do this and can be installed as a dotnet tool:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"dotnet tool install --global dotnet-mgcb-editor\n")),(0,r.yg)("h3",{id:"adding-content-to-your-project"},"Adding Content to Your Project"),(0,r.yg)("p",null,"The cocos2d-mono template already includes a Content.mgcb file in the Content folder, so you can proceed with adding your assets:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Double-click the Content.mgcb file in the Content folder to open the MonoGame Content Pipeline Tool"),(0,r.yg)("li",{parentName:"ol"},'Add your assets using "Add" > "Existing Item" and select appropriate processors for each')),(0,r.yg)("p",null,"NOTE: For more information on working with the MonoGame Content Pipeline Tool please check out MonoGame's docs ",(0,r.yg)("a",{parentName:"p",href:"https://docs.monogame.net/articles/getting_started/content_pipeline/index.html"},"here"),"."),(0,r.yg)("p",null,"Make sure to add these assets (use placeholder images if you don't have them yet):"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"background.png")," - Background image"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"player_idle.png")," - Player idle sprite"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"platform.png")," - Platform tile"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"coin.png")," - Collectible coin")),(0,r.yg)("h2",{id:"step-5-creating-a-basic-game-scene"},"Step 5: Creating a Basic Game Scene"),(0,r.yg)("p",null,"Now let's create a simple scene that displays our background. First, let's create our main game layer."),(0,r.yg)("p",null,"Create a new file called ",(0,r.yg)("inlineCode",{parentName:"p"},"GameLayer.cs"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing Cocos2D;\n\nnamespace Platformer\n{\n    public class GameLayer : CCLayer\n    {\n        public GameLayer()\n        {\n            // Get visible area size\n            CCSize visibleSize = CCDirector.SharedDirector.WinSize;\n            \n            // Create background\n            CCSprite background = new CCSprite("background");\n            background.Position = new CCPoint(visibleSize.Width / 2, visibleSize.Height / 2);\n            \n            // Scale background to fit screen\n            float scaleX = visibleSize.Width / background.ContentSize.Width;\n            float scaleY = visibleSize.Height / background.ContentSize.Height;\n            background.Scale = Math.Max(scaleX, scaleY);\n            \n            AddChild(background, -1);\n            \n            // Add a simple label to confirm everything is working\n            CCLabelTTF label = new CCLabelTTF("Platformer Tutorial - Part 1", "MarkerFelt", 22);\n            label.Position = new CCPoint(visibleSize.Width / 2, visibleSize.Height - 50);\n            label.Color = CCColor3B.Blue;\n            AddChild(label);\n        }\n    }\n}\n')),(0,r.yg)("h2",{id:"step-6-update-the-main-game-class"},"Step 6: Update the Main Game Class"),(0,r.yg)("p",null,"Now we need to update our main game class to use our new GameLayer. Update ",(0,r.yg)("inlineCode",{parentName:"p"},"AppDelegate.cs"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing Cocos2D;\nusing CocosDenshion;\nusing Microsoft.Xna.Framework;\n\nnamespace Platformer\n{\n    public class AppDelegate : CCApplication\n    {\n        public AppDelegate(Game game, GraphicsDeviceManager graphics)\n            : base(game, graphics)\n        {\n            s_pSharedApplication = this;\n            CCDrawManager.InitializeDisplay(game, graphics, DisplayOrientation.LandscapeLeft | DisplayOrientation.LandscapeRight);\n        }\n\n        public override bool ApplicationDidFinishLaunching()\n        {\n            CCSimpleAudioEngine.SharedEngine.SaveMediaState();\n\n            CCDirector pDirector = null;\n            try\n            {\n                // Set design resolution\n                CCDrawManager.SetDesignResolutionSize(800, 600, CCResolutionPolicy.ShowAll);\n                CCApplication.SharedApplication.GraphicsDevice.Clear(Color.Black);\n                \n                // Initialize director\n                pDirector = CCDirector.SharedDirector;\n                pDirector.SetOpenGlView();\n\n                // Turn on display FPS (optional, for debugging)\n                pDirector.DisplayStats = true;\n\n                // Set FPS\n                pDirector.AnimationInterval = 1.0 / 60;\n                \n                // Create and run scene\n                CCScene scene = new CCScene();\n                scene.AddChild(new GameLayer());\n                pDirector.RunWithScene(scene);\n            }\n            catch (Exception ex)\n            {\n                CCLog.Log("ApplicationDidFinishLaunching(): Error " + ex.ToString());\n            }\n            return true;\n        }\n\n        public override void ApplicationDidEnterBackground()\n        {\n            CCDirector.SharedDirector.Pause();\n            CCSimpleAudioEngine.SharedEngine.PauseBackgroundMusic();\n        }\n\n        public override void ApplicationWillEnterForeground()\n        {\n            CCDirector.SharedDirector.Resume();\n            CCSimpleAudioEngine.SharedEngine.ResumeBackgroundMusic();\n        }\n    }\n}\n')),(0,r.yg)("h2",{id:"step-7-build-and-test"},"Step 7: Build and Test"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Make sure all source files are saved"),(0,r.yg)("li",{parentName:"ol"},"Build the project by pressing F6 or selecting Build > Build Solution"),(0,r.yg)("li",{parentName:"ol"},"Run the game by pressing F5 or selecting Debug > Start Debugging")),(0,r.yg)("p",null,"If everything is set up correctly, you should see:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Your background image filling the screen"),(0,r.yg)("li",{parentName:"ul"},'A label showing "Platformer Tutorial - Part 1"'),(0,r.yg)("li",{parentName:"ul"},"FPS counter in the corner (if enabled)")),(0,r.yg)("h2",{id:"checkpoint-what-your-project-should-look-like"},"Checkpoint: What Your Project Should Look Like"),(0,r.yg)("p",null,"At this point, your project should have:"),(0,r.yg)("h3",{id:"project-structure"},"Project Structure:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Platformer/\n\u251c\u2500\u2500 Content/\n\u2502   \u251c\u2500\u2500 Content.mgcb\n\u2502   \u251c\u2500\u2500 background.png\n\u2502   \u251c\u2500\u2500 player_idle.png\n\u2502   \u251c\u2500\u2500 platform.png\n\u2502   \u2514\u2500\u2500 coin.png\n\u251c\u2500\u2500 GameLayer.cs\n\u251c\u2500\u2500 AppDelegate.cs\n\u251c\u2500\u2500 Game1.cs\n\u2514\u2500\u2500 Program.cs\n")),(0,r.yg)("h3",{id:"what-you-should-see"},"What You Should See:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A window opens with your background image"),(0,r.yg)("li",{parentName:"ul"},'The title "Platformer Tutorial - Part 1" at the top'),(0,r.yg)("li",{parentName:"ul"},"Smooth 60 FPS performance"),(0,r.yg)("li",{parentName:"ul"},"No errors in the console")),(0,r.yg)("h3",{id:"key-concepts-learned"},"Key Concepts Learned:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"How to set up a cocos2d-mono project"),(0,r.yg)("li",{parentName:"ul"},"Understanding the content pipeline"),(0,r.yg)("li",{parentName:"ul"},"Creating basic sprites and labels"),(0,r.yg)("li",{parentName:"ul"},"Setting up a game layer"),(0,r.yg)("li",{parentName:"ul"},"Managing screen resolution and scaling")),(0,r.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.yg)("p",null,"If you encounter issues:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Content not loading"),": Make sure your assets are added to Content.mgcb with the correct processor"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Black screen"),": Check that your background asset exists and is properly named"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Build errors"),": Ensure all using statements are correct and assemblies are referenced"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Performance issues"),": Make sure you're running in Release mode for best performance")),(0,r.yg)("h2",{id:"next-steps"},"Next Steps"),(0,r.yg)("p",null,"Congratulations! You've successfully set up your platformer project and created a basic scene. In ",(0,r.yg)("a",{parentName:"p",href:"./part-2-physics"},"Part 2: Physics Foundation"),", we'll add Box2D physics to our game and learn how to create a physics world with gravity."),(0,r.yg)("h2",{id:"download-checkpoint-project"},"Download Checkpoint Project"),(0,r.yg)("p",null,"You can download the complete Part 1 project ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/brandmooffin/cocos2d-mono-samples/tree/main/Tutorial%20Samples/Platformer/Checkpoints/Part%201"},"here")," to compare with your implementation or use as a starting point."))}g.isMDXComponent=!0}}]);