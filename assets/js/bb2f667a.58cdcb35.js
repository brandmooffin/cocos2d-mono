"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8107],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var a=n(6540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),y=l,d=u["".concat(c,".").concat(y)]||u[y]||m[y]||o;return n?a.createElement(d,r(r({ref:t},p),{},{components:n})):a.createElement(d,r({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(8168),l=(n(6540),n(5680));const o={sidebar_position:6},r="Part 5: Game Mechanics",i={unversionedId:"tutorials/platformer-tutorial/part-5-mechanics",id:"tutorials/platformer-tutorial/part-5-mechanics",title:"Part 5: Game Mechanics",description:"In this part, we'll add game mechanics that make our platformer engaging: collectible coins, a scoring system, and user interface elements.",source:"@site/docs/tutorials/platformer-tutorial/part-5-mechanics.md",sourceDirName:"tutorials/platformer-tutorial",slug:"/tutorials/platformer-tutorial/part-5-mechanics",permalink:"/docs/tutorials/platformer-tutorial/part-5-mechanics",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Part 4: Platforms and Collision",permalink:"/docs/tutorials/platformer-tutorial/part-4-platforms"},next:{title:"Developing",permalink:"/docs/category/developing"}},c={},s=[{value:"What We&#39;ll Accomplish",id:"what-well-accomplish",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Collectible Assets",id:"step-1-collectible-assets",level:2},{value:"Step 2: Create Collectible Class",id:"step-2-create-collectible-class",level:2},{value:"Step 3: Update Contact Listener",id:"step-3-update-contact-listener",level:2},{value:"Step 4: Update GameLayer",id:"step-4-update-gamelayer",level:2},{value:"\ud83c\udfaf Checkpoint: Game Mechanics",id:"-checkpoint-game-mechanics",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Complete Code Reference",id:"complete-code-reference",level:2},{value:"Congratulations! \ud83c\udf89",id:"congratulations-",level:2},{value:"Next Steps for Enhancement",id:"next-steps-for-enhancement",level:2},{value:"Final Complete Code Reference",id:"final-complete-code-reference",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.yg)(u,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"part-5-game-mechanics"},"Part 5: Game Mechanics"),(0,l.yg)("p",null,"In this part, we'll add game mechanics that make our platformer engaging: collectible coins, a scoring system, and user interface elements."),(0,l.yg)("h2",{id:"what-well-accomplish"},"What We'll Accomplish"),(0,l.yg)("p",null,"By the end of this part, you'll have:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Collectible coin objects with physics"),(0,l.yg)("li",{parentName:"ul"},"A scoring system that tracks collected coins"),(0,l.yg)("li",{parentName:"ul"},"UI elements displaying score and other game information"),(0,l.yg)("li",{parentName:"ul"},"Win condition when all coins are collected"),(0,l.yg)("li",{parentName:"ul"},"Sound effects for collecting coins"),(0,l.yg)("li",{parentName:"ul"},"Level completion detection")),(0,l.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Completed ",(0,l.yg)("a",{parentName:"li",href:"./part-4-platforms"},"Part 4: Platforms and Collision")),(0,l.yg)("li",{parentName:"ul"},"Understanding of UI elements in cocos2d-mono"),(0,l.yg)("li",{parentName:"ul"},"Basic game state management concepts")),(0,l.yg)("h2",{id:"step-1-collectible-assets"},"Step 1: Collectible Assets"),(0,l.yg)("p",null,"You'll need these assets for collectibles:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"coin.png")," - Coin sprite"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"coin_pickup.wav")," - Collection sound effect (optional)")),(0,l.yg)("p",null,"Add these to your Content folder. Find them in the ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/brandmooffin/cocos2d-mono-samples/tree/main/Tutorial%20Samples/Platformer/Final/Platformer/Content"},"complete project reference"),"."),(0,l.yg)("h2",{id:"step-2-create-collectible-class"},"Step 2: Create Collectible Class"),(0,l.yg)("p",null,"Create a new file called ",(0,l.yg)("inlineCode",{parentName:"p"},"Collectible.cs"),":"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-csharp"},'using Cocos2D;\nusing Box2D.Dynamics;\nusing Box2D.Common;\nusing Box2D.Collision.Shapes;\nusing CocosDenshion;\n\nnamespace Platformer\n{\n    public class Collectible : CCSprite\n    {\n        private b2Body _body;\n\n        public Collectible(b2World world, float x, float y) : base("coin")\n        {\n            Position = new CCPoint(x, y);\n\n            // Create physics body\n            b2BodyDef bodyDef = new b2BodyDef();\n            bodyDef.type = b2BodyType.b2_staticBody;\n            bodyDef.position = new b2Vec2(x / PhysicsHelper.PTM_RATIO, y / PhysicsHelper.PTM_RATIO);\n\n            _body = world.CreateBody(bodyDef);\n\n            // Create circle shape for collectible\n            b2CircleShape shape = new b2CircleShape();\n            shape.Radius = ContentSize.Width * 0.3f / PhysicsHelper.PTM_RATIO;\n\n            b2FixtureDef fixtureDef = new b2FixtureDef();\n            fixtureDef.shape = shape;\n            fixtureDef.isSensor = true; // Make it a sensor (no collision response)\n            fixtureDef.filter.categoryBits = PhysicsHelper.CATEGORY_COLLECTIBLE;\n            fixtureDef.filter.maskBits = PhysicsHelper.CATEGORY_PLAYER;\n\n            _body.CreateFixture(fixtureDef).UserData = this;\n\n            // Add a rotation action\n            RunAction(new CCRepeatForever(new CCRotateBy(2.0f, 360)));\n        }\n\n        public void Collect(GameLayer gameLayer)\n        {\n            // Remove from physics world\n            _body.World.DestroyBody(_body);\n            _body = null;\n\n            // Play collection animation\n            RunAction(new CCSequence(\n                new CCScaleTo(0.2f, 1.5f),\n                new CCScaleTo(0.2f, 0.0f),\n                new CCCallFunc(() => RemoveFromParent())\n            ));\n\n            // Play collection sound\n            CCSimpleAudioEngine.SharedEngine.PlayEffect("coin_pickup");\n\n            // Increase score\n            gameLayer.IncreaseScore(10);\n        }\n    }\n}\n')),(0,l.yg)("h2",{id:"step-3-update-contact-listener"},"Step 3: Update Contact Listener"),(0,l.yg)("p",null,"Update your ",(0,l.yg)("inlineCode",{parentName:"p"},"ContactListener.cs")," to handle coin collection:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-csharp"},"// Add this to the BeginContact method in ContactListener.cs\npublic override void BeginContact(b2Contact contact)\n{\n    // ...existing code\n            \n    // Check for collectible contacts\n    CheckCollectibleContact(contact.GetFixtureA(), contact.GetFixtureB());\n    CheckCollectibleContact(contact.GetFixtureB(), contact.GetFixtureA());\n}\n\nprivate void CheckCollectibleContact(b2Fixture fixtureA, b2Fixture fixtureB)\n{\n    // Check if fixA is a collectible and fixB is the player\n    Collectible collectible = fixtureA.UserData as Collectible;\n    if (collectible != null &&\n        fixtureB.Filter.categoryBits == PhysicsHelper.CATEGORY_PLAYER)\n    {\n        // Get the game layer from the player's parent\n        Player.FootSensorUserData playerNode = fixtureB.UserData as Player.FootSensorUserData;\n        if (playerNode != null && collectible.Parent is GameLayer gameLayer)\n        {\n            collectible.Collect(gameLayer);\n        }\n    }\n}\n")),(0,l.yg)("h2",{id:"step-4-update-gamelayer"},"Step 4: Update GameLayer"),(0,l.yg)("p",null,"Update your ",(0,l.yg)("inlineCode",{parentName:"p"},"GameLayer.cs")," to include collectibles:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-csharp"},"private void CreateLevel()\n{\n    // ...existing code\n\n    // Create collectibles\n    for (int i = 0; i < 3; i++)\n    {\n        Collectible coin = new Collectible(_world, 200 + i * 200, 200);\n        AddChild(coin);\n    }\n}\n")),(0,l.yg)("h2",{id:"-checkpoint-game-mechanics"},"\ud83c\udfaf Checkpoint: Game Mechanics"),(0,l.yg)("p",null,"At this point, you should have:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"\u2705 Collectible coins placed throughout the level"),(0,l.yg)("li",{parentName:"ul"},"\u2705 Working score system that updates when coins are collected"),(0,l.yg)("li",{parentName:"ul"},"\u2705 UI showing current score and coin collection progress"),(0,l.yg)("li",{parentName:"ul"},"\u2705 Sound effects for collecting coins (if audio files are included)")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Test your game"),": Run the project and verify that:"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"Coins appear on platforms and animate (rotate and bob)"),(0,l.yg)("li",{parentName:"ol"},"Walking into coins collects them and increases score"),(0,l.yg)("li",{parentName:"ol"},"UI updates correctly showing score and coin count")),(0,l.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Coins not collecting"),": Check that contact listener is handling sensor collisions correctly."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"UI not updating"),": Verify that event handlers are properly connected to GameManager events."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Sound not playing"),": Ensure audio files are added to Content folder with proper build action."),(0,l.yg)("h2",{id:"complete-code-reference"},"Complete Code Reference"),(0,l.yg)("p",null,"You can find the complete code for this part in the ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/brandmooffin/cocos2d-mono-samples/tree/main/Tutorial%20Samples/Platformer/Checkpoints/Part%205"},"tutorial samples repository"),"."),(0,l.yg)("h2",{id:"congratulations-"},"Congratulations! \ud83c\udf89"),(0,l.yg)("p",null,"You've successfully created a complete 2D platformer game using cocos2d-mono! Your game features:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Physics-based gameplay")," with Box2D integration"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Smooth character controls")," with jump mechanics"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Collectible system")," with scoring"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Professional polish")," with effects and animations"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Complete game states")," from menu to gameplay"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("strong",{parentName:"li"},"Audio integration")," for immersive experience")),(0,l.yg)("h2",{id:"next-steps-for-enhancement"},"Next Steps for Enhancement"),(0,l.yg)("p",null,"Consider adding these features to further improve your game:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Multiple levels with different layouts"),(0,l.yg)("li",{parentName:"ul"},"Enemy characters with AI"),(0,l.yg)("li",{parentName:"ul"},"Power-ups and special abilities"),(0,l.yg)("li",{parentName:"ul"},"Better sprite artwork and animations"),(0,l.yg)("li",{parentName:"ul"},"Level editor functionality"),(0,l.yg)("li",{parentName:"ul"},"Achievements and high scores"),(0,l.yg)("li",{parentName:"ul"},"Mobile touch controls")),(0,l.yg)("h2",{id:"final-complete-code-reference"},"Final Complete Code Reference"),(0,l.yg)("p",null,"The complete, final project with all assets can be found in the ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/brandmooffin/cocos2d-mono-samples/tree/main/Tutorial%20Samples/Platformer/Final"},"tutorial samples repository"),"."),(0,l.yg)("p",null,"Thank you for following this tutorial series! You now have the foundation to create more complex 2D games with cocos2d-mono."))}m.isMDXComponent=!0}}]);